name: Build Executables

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    continue-on-error: true  # Allow individual platform builds to fail
    strategy:
      fail-fast: false
      matrix:
        include:
          # macOS builds
          - os: macos-latest
            arch: amd64
            python-arch: x64
            binary-name: md2kms-amd64-darwin
          - os: macos-14
            arch: arm64
            python-arch: arm64
            binary-name: md2kms-arm64-darwin
          
          # Linux builds
          - os: ubuntu-latest
            arch: amd64
            python-arch: x64
            binary-name: md2kms-amd64-linux
          - os: ubuntu-latest
            arch: arm64
            python-arch: x64
            binary-name: md2kms-arm64-linux
            qemu: true
          
          # Windows build
          - os: windows-latest
            arch: amd64
            python-arch: x64
            binary-name: md2kms-amd64-windows.exe

    steps:
      - uses: actions/checkout@v4

      # Set up QEMU for ARM64 Linux builds
      - name: Set up QEMU
        if: matrix.qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          architecture: ${{ matrix.python-arch }}

      - name: Install uv (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install uv (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          irm https://astral.sh/uv/install.ps1 | iex
          echo "$env:USERPROFILE\.cargo\bin" >> $env:GITHUB_PATH

      - name: Install dependencies (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          uv pip install --system pyinstaller pyyaml pillow
          uv sync

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          $env:Path = "$env:USERPROFILE\.cargo\bin;$env:Path"
          uv pip install --system pyinstaller pyyaml pillow
          uv sync

      - name: Build executable
        run: uv run python build.py

      - name: Test executable
        shell: bash
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            ./dist/md2kms.exe --help || echo "Windows test skipped"
          else
            chmod +x ./dist/md2kms
            ./dist/md2kms --help || echo "Test failed but continuing..."
          fi

      - name: Prepare binary
        shell: bash
        run: |
          mkdir -p release
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp dist/md2kms.exe release/${{ matrix.binary-name }}
          else
            cp dist/md2kms release/${{ matrix.binary-name }}
            chmod +x release/${{ matrix.binary-name }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary-name }}
          path: release/${{ matrix.binary-name }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: release/${{ matrix.binary-name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
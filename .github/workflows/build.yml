name: Build Executables

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    continue-on-error: true  # Allow individual platform builds to fail
    strategy:
      fail-fast: false
      matrix:
        include:
          # macOS builds
          - os: macos-latest
            arch: amd64
            binary-name: md2kms-darwin-amd64
          - os: macos-latest
            arch: arm64
            binary-name: md2kms-darwin-arm64
          
          # Linux builds
          - os: ubuntu-latest
            arch: amd64
            binary-name: md2kms-linux-amd64
          - os: ubuntu-latest
            arch: arm64
            binary-name: md2kms-linux-arm64
          
          # Windows build
          - os: windows-latest
            arch: amd64
            binary-name: md2kms-windows-amd64.exe

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史以便正确生成版本号

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      # 设置特殊的交叉编译环境
      - name: Set up cross-compilation for ARM64
        if: matrix.arch == 'arm64'
        run: |
          echo "CGO_ENABLED=0" >> $GITHUB_ENV

      # 编译执行文件
      - name: Build with Go
        env:
          GOOS: ${{ matrix.os == 'windows-latest' && 'windows' || matrix.os == 'macos-latest' && 'darwin' || 'linux' }}
          GOARCH: ${{ matrix.arch }}
        run: |
          mkdir -p release
          go build -ldflags="-s -w" -o release/${{ matrix.binary-name }} .

      # 测试生成的执行文件
      - name: Test executable (non-Windows)
        if: matrix.os != 'windows-latest'
        run: |
          chmod +x release/${{ matrix.binary-name }}
          release/${{ matrix.binary-name }} --help || echo "Test failed but continuing..."

      - name: Test executable (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          release/${{ matrix.binary-name }} --help || echo "Test failed but continuing..."

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary-name }}
          path: release/${{ matrix.binary-name }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: release/${{ matrix.binary-name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.AC }} 